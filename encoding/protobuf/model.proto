syntax = "proto3";
package protobuf;

option go_package = "encoding/protobuf";

// PaymentInstruction contains the essential details needed to make a payment.
// This includes recipient address, amount, expiration, and other payment parameters.
message PaymentInstruction {
  string id = 1 [json_name = "id"];                     // Unique payment identifier
  string address = 2 [json_name = "address"];           // Recipient's address
  string address_tag = 3 [json_name = "address_tag"];   // Optional tag/memo (for blockchains that require it)
  string unique_asset_id = 4 [json_name = "unique_asset_id"]; // Asset identifier (cryptocurrency/token)
  bool is_open = 5 [json_name = "is_open"];             // Whether the amount is open (variable)
  string amount = 6 [json_name = "amount"];             // Fixed amount (when is_open is false)
  string min_amount = 7 [json_name = "min_amount"];     // Minimum amount (when is_open is true)
  string max_amount = 8 [json_name = "max_amount"];     // Maximum amount (when is_open is true)
  int64 expires_at = 9 [json_name = "expires_at"];      // Unix timestamp when payment expires
}

// InstructionMerchant contains information about the merchant.
// This helps identify the recipient of the payment.
message InstructionMerchant {
  string name = 1 [json_name = "name"];                 // Merchant name
  string description = 2 [json_name = "description"];   // Merchant description
  string tax_id = 3 [json_name = "tax_id"];             // Tax identification number
  string image = 4 [json_name = "image"];               // Merchant logo/image URL or data URI
  string mcc = 5 [json_name = "mcc"];                   // Merchant category code (ISO 18245)
}

// InstructionItem represents an individual item in an order.
// This provides details about a specific product or service being purchased.
message InstructionItem {
  string description = 1 [json_name = "description"];   // Item description
  string amount = 2 [json_name = "amount"];             // Total amount for this item
  string coin_code = 3 [json_name = "coin_code"];       // Currency code for this item
  string unit_price = 4 [json_name = "unit_price"];     // Price per unit
  int32 quantity = 5 [json_name = "quantity"];          // Number of units
}

// InstructionOrder contains additional information about the order.
// This provides context for the payment such as merchant details and items purchased.
message InstructionOrder {
  string total = 1 [json_name = "total"];               // Total order amount
  string coin_code = 2 [json_name = "coin_code"];       // Currency code (e.g., USD, EUR)
  string description = 3 [json_name = "description"];   // Order description
  InstructionMerchant merchant = 4 [json_name = "merchant"]; // Merchant information
  repeated InstructionItem items = 5 [json_name = "items"];  // Individual items in the order
}

// InstructionPayload represents a complete payment instruction.
// This contains both the payment details and optional order information.
message InstructionPayload {
  PaymentInstruction payment = 1 [json_name = "payment"]; // Payment details
  InstructionOrder order = 2 [json_name = "order"];       // Optional order information
} 

// UrlPayload represents a payment URL instruction payload.
// This is used for directing users to a payment service endpoint.
message UrlPayload {
  string url = 1 [json_name = "url"];                   // Payment service URL
  repeated string payment_options = 2 [json_name = "payment_options"]; // Available payment asset IDs
  InstructionOrder order = 3 [json_name = "order"];     // Optional order information
}

// PasetoTokenData represents the payload structure of a PASETO token.
// It contains standard PASETO claims as well as custom data for NASPIP.
message PasetoTokenData {
  string iss = 1;  // Issuer of the token
  string sub = 2;  // Subject of the token
  string aud = 3;  // Audience of the token
  string exp = 4;  // Expiration time (RFC3339Mili format)
  string nbf = 5;  // Not before time (RFC3339Mili format)
  string iat = 6;  // Issued at time (RFC3339Mili format)
  string jti = 7;  // JWT ID (unique identifier)
  string kid = 8;  // Key ID
  string kep = 9;  // Key expiration time (RFC3339 format)
  string kis = 10; // Key issuer
  oneof data {
    InstructionPayload instruction_payload = 11 [json_name = "data"]; // Payment instruction data
    UrlPayload url_payload = 12 [json_name = "data"];                 // URL payload data
  }
}
